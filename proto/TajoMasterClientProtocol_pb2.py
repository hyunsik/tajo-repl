# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TajoMasterClientProtocol.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import tajo_protos_pb2
import TajoIdProtos_pb2
import CatalogProtos_pb2
import PrimitiveProtos_pb2
import ClientProtos_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='TajoMasterClientProtocol.proto',
  package='',
  serialized_pb='\n\x1eTajoMasterClientProtocol.proto\x1a\x11tajo_protos.proto\x1a\x12TajoIdProtos.proto\x1a\x13\x43\x61talogProtos.proto\x1a\x15PrimitiveProtos.proto\x1a\x12\x43lientProtos.proto2\xb9\r\n\x1fTajoMasterClientProtocolService\x12>\n\rcreateSession\x12\x15.CreateSessionRequest\x1a\x16.CreateSessionResponse\x12,\n\rremoveSession\x12\x0f.SessionIdProto\x1a\n.BoolProto\x12O\n\x16updateSessionVariables\x12\x1d.UpdateSessionVariableRequest\x1a\x16.SessionUpdateResponse\x12\x39\n\x14\x65xistSessionVariable\x12\x15.SessionedStringProto\x1a\n.BoolProto\x12\x39\n\x12getSessionVariable\x12\x15.SessionedStringProto\x1a\x0c.StringProto\x12<\n\x16getAllSessionVariables\x12\x0f.SessionIdProto\x1a\x11.KeyValueSetProto\x12\x32\n\x0bsubmitQuery\x12\r.QueryRequest\x1a\x14.SubmitQueryResponse\x12\x32\n\x0bupdateQuery\x12\r.QueryRequest\x1a\x14.UpdateQueryResponse\x12\x41\n\x0egetQueryResult\x12\x16.GetQueryResultRequest\x1a\x17.GetQueryResultResponse\x12M\n\x12getQueryResultData\x12\x1a.GetQueryResultDataRequest\x1a\x1b.GetQueryResultDataResponse\x12\x41\n\x0egetQueryStatus\x12\x16.GetQueryStatusRequest\x1a\x17.GetQueryStatusResponse\x12\x42\n\x13getRunningQueryList\x12\x14.GetQueryListRequest\x1a\x15.GetQueryListResponse\x12\x43\n\x14getFinishedQueryList\x12\x14.GetQueryListRequest\x1a\x15.GetQueryListResponse\x12(\n\tkillQuery\x12\x0f.QueryIdRequest\x1a\n.BoolProto\x12\x41\n\x0egetClusterInfo\x12\x16.GetClusterInfoRequest\x1a\x17.GetClusterInfoResponse\x12\x33\n\x14\x63loseNonForwardQuery\x12\x0f.QueryIdRequest\x1a\n.BoolProto\x12\x36\n\x0cgetQueryInfo\x12\x0f.QueryIdRequest\x1a\x15.GetQueryInfoResponse\x12\x33\n\x0e\x63reateDatabase\x12\x15.SessionedStringProto\x1a\n.BoolProto\x12\x32\n\rexistDatabase\x12\x15.SessionedStringProto\x1a\n.BoolProto\x12\x31\n\x0c\x64ropDatabase\x12\x15.SessionedStringProto\x1a\n.BoolProto\x12\x34\n\x0fgetAllDatabases\x12\x0f.SessionIdProto\x1a\x10.StringListProto\x12\x33\n\x12getCurrentDatabase\x12\x0f.SessionIdProto\x1a\x0c.StringProto\x12\x33\n\x0eselectDatabase\x12\x15.SessionedStringProto\x1a\n.BoolProto\x12:\n\x13\x63reateExternalTable\x12\x13.CreateTableRequest\x1a\x0e.TableResponse\x12/\n\nexistTable\x12\x15.SessionedStringProto\x1a\n.BoolProto\x12*\n\tdropTable\x12\x11.DropTableRequest\x1a\n.BoolProto\x12;\n\x0cgetTableList\x12\x14.GetTableListRequest\x1a\x15.GetTableListResponse\x12\x34\n\x0cgetTableDesc\x12\x14.GetTableDescRequest\x1a\x0e.TableResponse\x12;\n\x0fgetFunctionList\x12\x15.SessionedStringProto\x1a\x11.FunctionResponseB5\n\x13org.apache.tajo.ipcB\x18TajoMasterClientProtocol\x88\x01\x01\xa0\x01\x01')





DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), '\n\023org.apache.tajo.ipcB\030TajoMasterClientProtocol\210\001\001\240\001\001')
import abc
from grpc.early_adopter import implementations
from grpc.framework.alpha import utilities
class EarlyAdopterTajoMasterClientProtocolServiceServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def createSession(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def removeSession(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def updateSessionVariables(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def existSessionVariable(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getSessionVariable(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getAllSessionVariables(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def submitQuery(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def updateQuery(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getQueryResult(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getQueryResultData(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getQueryStatus(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getRunningQueryList(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getFinishedQueryList(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def killQuery(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getClusterInfo(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def closeNonForwardQuery(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getQueryInfo(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def createDatabase(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def existDatabase(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def dropDatabase(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getAllDatabases(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getCurrentDatabase(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def selectDatabase(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def createExternalTable(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def existTable(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def dropTable(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getTableList(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getTableDesc(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def getFunctionList(self, request, context):
    raise NotImplementedError()
class EarlyAdopterTajoMasterClientProtocolServiceServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterTajoMasterClientProtocolServiceStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def createSession(self, request):
    raise NotImplementedError()
  createSession.async = None
  @abc.abstractmethod
  def removeSession(self, request):
    raise NotImplementedError()
  removeSession.async = None
  @abc.abstractmethod
  def updateSessionVariables(self, request):
    raise NotImplementedError()
  updateSessionVariables.async = None
  @abc.abstractmethod
  def existSessionVariable(self, request):
    raise NotImplementedError()
  existSessionVariable.async = None
  @abc.abstractmethod
  def getSessionVariable(self, request):
    raise NotImplementedError()
  getSessionVariable.async = None
  @abc.abstractmethod
  def getAllSessionVariables(self, request):
    raise NotImplementedError()
  getAllSessionVariables.async = None
  @abc.abstractmethod
  def submitQuery(self, request):
    raise NotImplementedError()
  submitQuery.async = None
  @abc.abstractmethod
  def updateQuery(self, request):
    raise NotImplementedError()
  updateQuery.async = None
  @abc.abstractmethod
  def getQueryResult(self, request):
    raise NotImplementedError()
  getQueryResult.async = None
  @abc.abstractmethod
  def getQueryResultData(self, request):
    raise NotImplementedError()
  getQueryResultData.async = None
  @abc.abstractmethod
  def getQueryStatus(self, request):
    raise NotImplementedError()
  getQueryStatus.async = None
  @abc.abstractmethod
  def getRunningQueryList(self, request):
    raise NotImplementedError()
  getRunningQueryList.async = None
  @abc.abstractmethod
  def getFinishedQueryList(self, request):
    raise NotImplementedError()
  getFinishedQueryList.async = None
  @abc.abstractmethod
  def killQuery(self, request):
    raise NotImplementedError()
  killQuery.async = None
  @abc.abstractmethod
  def getClusterInfo(self, request):
    raise NotImplementedError()
  getClusterInfo.async = None
  @abc.abstractmethod
  def closeNonForwardQuery(self, request):
    raise NotImplementedError()
  closeNonForwardQuery.async = None
  @abc.abstractmethod
  def getQueryInfo(self, request):
    raise NotImplementedError()
  getQueryInfo.async = None
  @abc.abstractmethod
  def createDatabase(self, request):
    raise NotImplementedError()
  createDatabase.async = None
  @abc.abstractmethod
  def existDatabase(self, request):
    raise NotImplementedError()
  existDatabase.async = None
  @abc.abstractmethod
  def dropDatabase(self, request):
    raise NotImplementedError()
  dropDatabase.async = None
  @abc.abstractmethod
  def getAllDatabases(self, request):
    raise NotImplementedError()
  getAllDatabases.async = None
  @abc.abstractmethod
  def getCurrentDatabase(self, request):
    raise NotImplementedError()
  getCurrentDatabase.async = None
  @abc.abstractmethod
  def selectDatabase(self, request):
    raise NotImplementedError()
  selectDatabase.async = None
  @abc.abstractmethod
  def createExternalTable(self, request):
    raise NotImplementedError()
  createExternalTable.async = None
  @abc.abstractmethod
  def existTable(self, request):
    raise NotImplementedError()
  existTable.async = None
  @abc.abstractmethod
  def dropTable(self, request):
    raise NotImplementedError()
  dropTable.async = None
  @abc.abstractmethod
  def getTableList(self, request):
    raise NotImplementedError()
  getTableList.async = None
  @abc.abstractmethod
  def getTableDesc(self, request):
    raise NotImplementedError()
  getTableDesc.async = None
  @abc.abstractmethod
  def getFunctionList(self, request):
    raise NotImplementedError()
  getFunctionList.async = None
def early_adopter_create_TajoMasterClientProtocolService_server(servicer, port, private_key=None, certificate_chain=None):
  import ClientProtos_pb2
  import ClientProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  method_service_descriptions = {
    "closeNonForwardQuery": utilities.unary_unary_service_description(
      servicer.closeNonForwardQuery,
      ClientProtos_pb2.QueryIdRequest.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "createDatabase": utilities.unary_unary_service_description(
      servicer.createDatabase,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "createExternalTable": utilities.unary_unary_service_description(
      servicer.createExternalTable,
      ClientProtos_pb2.CreateTableRequest.FromString,
      ClientProtos_pb2.TableResponse.SerializeToString,
    ),
    "createSession": utilities.unary_unary_service_description(
      servicer.createSession,
      ClientProtos_pb2.CreateSessionRequest.FromString,
      ClientProtos_pb2.CreateSessionResponse.SerializeToString,
    ),
    "dropDatabase": utilities.unary_unary_service_description(
      servicer.dropDatabase,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "dropTable": utilities.unary_unary_service_description(
      servicer.dropTable,
      ClientProtos_pb2.DropTableRequest.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "existDatabase": utilities.unary_unary_service_description(
      servicer.existDatabase,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "existSessionVariable": utilities.unary_unary_service_description(
      servicer.existSessionVariable,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "existTable": utilities.unary_unary_service_description(
      servicer.existTable,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "getAllDatabases": utilities.unary_unary_service_description(
      servicer.getAllDatabases,
      TajoIdProtos_pb2.SessionIdProto.FromString,
      PrimitiveProtos_pb2.StringListProto.SerializeToString,
    ),
    "getAllSessionVariables": utilities.unary_unary_service_description(
      servicer.getAllSessionVariables,
      TajoIdProtos_pb2.SessionIdProto.FromString,
      PrimitiveProtos_pb2.KeyValueSetProto.SerializeToString,
    ),
    "getClusterInfo": utilities.unary_unary_service_description(
      servicer.getClusterInfo,
      ClientProtos_pb2.GetClusterInfoRequest.FromString,
      ClientProtos_pb2.GetClusterInfoResponse.SerializeToString,
    ),
    "getCurrentDatabase": utilities.unary_unary_service_description(
      servicer.getCurrentDatabase,
      TajoIdProtos_pb2.SessionIdProto.FromString,
      PrimitiveProtos_pb2.StringProto.SerializeToString,
    ),
    "getFinishedQueryList": utilities.unary_unary_service_description(
      servicer.getFinishedQueryList,
      ClientProtos_pb2.GetQueryListRequest.FromString,
      ClientProtos_pb2.GetQueryListResponse.SerializeToString,
    ),
    "getFunctionList": utilities.unary_unary_service_description(
      servicer.getFunctionList,
      ClientProtos_pb2.SessionedStringProto.FromString,
      ClientProtos_pb2.FunctionResponse.SerializeToString,
    ),
    "getQueryInfo": utilities.unary_unary_service_description(
      servicer.getQueryInfo,
      ClientProtos_pb2.QueryIdRequest.FromString,
      ClientProtos_pb2.GetQueryInfoResponse.SerializeToString,
    ),
    "getQueryResult": utilities.unary_unary_service_description(
      servicer.getQueryResult,
      ClientProtos_pb2.GetQueryResultRequest.FromString,
      ClientProtos_pb2.GetQueryResultResponse.SerializeToString,
    ),
    "getQueryResultData": utilities.unary_unary_service_description(
      servicer.getQueryResultData,
      ClientProtos_pb2.GetQueryResultDataRequest.FromString,
      ClientProtos_pb2.GetQueryResultDataResponse.SerializeToString,
    ),
    "getQueryStatus": utilities.unary_unary_service_description(
      servicer.getQueryStatus,
      ClientProtos_pb2.GetQueryStatusRequest.FromString,
      ClientProtos_pb2.GetQueryStatusResponse.SerializeToString,
    ),
    "getRunningQueryList": utilities.unary_unary_service_description(
      servicer.getRunningQueryList,
      ClientProtos_pb2.GetQueryListRequest.FromString,
      ClientProtos_pb2.GetQueryListResponse.SerializeToString,
    ),
    "getSessionVariable": utilities.unary_unary_service_description(
      servicer.getSessionVariable,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.StringProto.SerializeToString,
    ),
    "getTableDesc": utilities.unary_unary_service_description(
      servicer.getTableDesc,
      ClientProtos_pb2.GetTableDescRequest.FromString,
      ClientProtos_pb2.TableResponse.SerializeToString,
    ),
    "getTableList": utilities.unary_unary_service_description(
      servicer.getTableList,
      ClientProtos_pb2.GetTableListRequest.FromString,
      ClientProtos_pb2.GetTableListResponse.SerializeToString,
    ),
    "killQuery": utilities.unary_unary_service_description(
      servicer.killQuery,
      ClientProtos_pb2.QueryIdRequest.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "removeSession": utilities.unary_unary_service_description(
      servicer.removeSession,
      TajoIdProtos_pb2.SessionIdProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "selectDatabase": utilities.unary_unary_service_description(
      servicer.selectDatabase,
      ClientProtos_pb2.SessionedStringProto.FromString,
      PrimitiveProtos_pb2.BoolProto.SerializeToString,
    ),
    "submitQuery": utilities.unary_unary_service_description(
      servicer.submitQuery,
      ClientProtos_pb2.QueryRequest.FromString,
      ClientProtos_pb2.SubmitQueryResponse.SerializeToString,
    ),
    "updateQuery": utilities.unary_unary_service_description(
      servicer.updateQuery,
      ClientProtos_pb2.QueryRequest.FromString,
      ClientProtos_pb2.UpdateQueryResponse.SerializeToString,
    ),
    "updateSessionVariables": utilities.unary_unary_service_description(
      servicer.updateSessionVariables,
      ClientProtos_pb2.UpdateSessionVariableRequest.FromString,
      ClientProtos_pb2.SessionUpdateResponse.SerializeToString,
    ),
  }
  return implementations.server("TajoMasterClientProtocolService", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_TajoMasterClientProtocolService_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import ClientProtos_pb2
  import ClientProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import TajoIdProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import PrimitiveProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  import ClientProtos_pb2
  method_invocation_descriptions = {
    "closeNonForwardQuery": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.QueryIdRequest.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "createDatabase": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "createExternalTable": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.CreateTableRequest.SerializeToString,
      ClientProtos_pb2.TableResponse.FromString,
    ),
    "createSession": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.CreateSessionRequest.SerializeToString,
      ClientProtos_pb2.CreateSessionResponse.FromString,
    ),
    "dropDatabase": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "dropTable": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.DropTableRequest.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "existDatabase": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "existSessionVariable": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "existTable": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "getAllDatabases": utilities.unary_unary_invocation_description(
      TajoIdProtos_pb2.SessionIdProto.SerializeToString,
      PrimitiveProtos_pb2.StringListProto.FromString,
    ),
    "getAllSessionVariables": utilities.unary_unary_invocation_description(
      TajoIdProtos_pb2.SessionIdProto.SerializeToString,
      PrimitiveProtos_pb2.KeyValueSetProto.FromString,
    ),
    "getClusterInfo": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetClusterInfoRequest.SerializeToString,
      ClientProtos_pb2.GetClusterInfoResponse.FromString,
    ),
    "getCurrentDatabase": utilities.unary_unary_invocation_description(
      TajoIdProtos_pb2.SessionIdProto.SerializeToString,
      PrimitiveProtos_pb2.StringProto.FromString,
    ),
    "getFinishedQueryList": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetQueryListRequest.SerializeToString,
      ClientProtos_pb2.GetQueryListResponse.FromString,
    ),
    "getFunctionList": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      ClientProtos_pb2.FunctionResponse.FromString,
    ),
    "getQueryInfo": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.QueryIdRequest.SerializeToString,
      ClientProtos_pb2.GetQueryInfoResponse.FromString,
    ),
    "getQueryResult": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetQueryResultRequest.SerializeToString,
      ClientProtos_pb2.GetQueryResultResponse.FromString,
    ),
    "getQueryResultData": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetQueryResultDataRequest.SerializeToString,
      ClientProtos_pb2.GetQueryResultDataResponse.FromString,
    ),
    "getQueryStatus": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetQueryStatusRequest.SerializeToString,
      ClientProtos_pb2.GetQueryStatusResponse.FromString,
    ),
    "getRunningQueryList": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetQueryListRequest.SerializeToString,
      ClientProtos_pb2.GetQueryListResponse.FromString,
    ),
    "getSessionVariable": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.StringProto.FromString,
    ),
    "getTableDesc": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetTableDescRequest.SerializeToString,
      ClientProtos_pb2.TableResponse.FromString,
    ),
    "getTableList": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.GetTableListRequest.SerializeToString,
      ClientProtos_pb2.GetTableListResponse.FromString,
    ),
    "killQuery": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.QueryIdRequest.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "removeSession": utilities.unary_unary_invocation_description(
      TajoIdProtos_pb2.SessionIdProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "selectDatabase": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.SessionedStringProto.SerializeToString,
      PrimitiveProtos_pb2.BoolProto.FromString,
    ),
    "submitQuery": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.QueryRequest.SerializeToString,
      ClientProtos_pb2.SubmitQueryResponse.FromString,
    ),
    "updateQuery": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.QueryRequest.SerializeToString,
      ClientProtos_pb2.UpdateQueryResponse.FromString,
    ),
    "updateSessionVariables": utilities.unary_unary_invocation_description(
      ClientProtos_pb2.UpdateSessionVariableRequest.SerializeToString,
      ClientProtos_pb2.SessionUpdateResponse.FromString,
    ),
  }
  return implementations.stub("TajoMasterClientProtocolService", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)
# @@protoc_insertion_point(module_scope)
